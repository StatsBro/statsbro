@model StatsViewModel

@{
    var request = (StatsRequest)ViewBag.Request;
    var linkBuilder = (StatsRequestLinkBuilder)ViewBag.LinkBuilder;
}

<section class="dashboard">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Filtrowanie</h5>
                    <h6>Zakres czasu (od-do)</h6>
                    <form method="get" action="?" class="row row-cols-lg-auto g-3 align-items-center">
                        <div class="col-md-2">
                            <label for="inputDate" class="form-label visually-hidden">Data od</label>
                            <input name="From" type="date" value="@request.From.Value.ToString("yyyy-MM-dd")" class="form-control" required/>
                        </div>
                        <div class="col-md-2">
                            <label for="inputDate" class="form-label visually-hidden">Data do</label>
                            <input name="To" type="date" value="@request.To.Value.ToString("yyyy-MM-dd")" class="form-control" required/>
                        </div>
                        <div class="col-1">
                            <input type="hidden" name="url" value="@request.Url"/>
                            <input type="hidden" name="city" value="@request.City"/>
                            <input type="hidden" name="country" value="@request.Country"/>
                            <input type="hidden" name="event" value="@request.Event"/>
                            <input type="hidden" name="lang" value="@request.Lang"/>
                            <input type="hidden" name="utmcampaign" value="@request.UtmCampaign"/>
                            <button type="submit" class="btn btn-primary">Pokaż</button>
                        </div>
                    </form>
                    <h6 class="mt-3">Szybkie filtry czasu</h6>
                    <p class="fs-0-75">
                        <a href="@linkBuilder.FilterByDate(7).GetUrl()" class="mx-2">Ostatnie 7 dni</a>
                        <a href="@linkBuilder.FilterByDate(30).GetUrl()" class="mx-2">Ostatnie 30 dni</a>
                        <a href="@linkBuilder.FilterByDate(60).GetUrl()" class="mx-2">Ostatnie 60 dni</a>
                    </p>
                    <h6 class="mt-3">Wybrane filtry</h6>
                    <p class="fs-5">
                        @if (request.Url != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByUrl, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Strona = @request.Url</span></a>
                        }
                        @if (request.UtmCampaign != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByUtmCampaign, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Kampania = @request.UtmCampaign</span></a>
                        }
                        @if (request.Event != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByEventName, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Typ zdarzenia = @request.Event</span></a>
                        }
                        @if (request.Country != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByCountry, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Państwo = @request.Country</span></a>
                        }
                        @if (request.City != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByCity, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Miasto = @request.City</span></a>
                        }
                        @if (request.Lang != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByLang, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Język = @request.Lang</span></a>
                        }
                        @if (request.Referrer != null)
                        {
                            <a href="@linkBuilder.FilterBy(StatsRequestLinkBuilder.StatsRequestFitlerType.ByReferrer, "").GetUrl()"><span class="badge bg-secondary"><i class="bi bi-x me-1"></i> Źródło = @request.Referrer</span></a>
                        }
                    </p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xxl-3 col-md-6">
            <div class="card info-card">
                <div class="card-body">
                    <h5 class="card-title">Użytkownicy</h5>
                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center" style="background: #ffecdf; color: #ff771d;">
                            <i class="bi bi-people"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@Model.Summary.TotalUsersCount.ToString("N0")</h6>
                            @if (Model.Summary.TotalUsersChange.HasValue)
                            {
                                <span class="@Model.GetChangeValueClass(Model.Summary.TotalUsersChange) small pt-1 fw-bold">@Model.Summary.TotalUsersChange%</span> <span class="text-muted small pt-2 ps-1">@Model.GetChangeValueText(Model.Summary.TotalUsersChange)</span>   
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xxl-3 col-md-6">
            <div class="card info-card">
                <div class="card-body">
                    <h5 class="card-title">Zaangażowani użytkownicy</h5>
                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center" style="color: #2eca6a; background: #e0f8e9;">
                            <i class="bi bi-person-plus"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@Model.Summary.TotalEngagedUsersCount.ToString("N0")</h6>
                            @if (Model.Summary.TotalEngagedUsersChange.HasValue)
                            {
                                <span class="@Model.GetChangeValueClass(Model.Summary.TotalEngagedUsersChange) small pt-1 fw-bold">@Model.Summary.TotalEngagedUsersChange%</span> <span class="text-muted small pt-2 ps-1">@Model.GetChangeValueText(Model.Summary.TotalEngagedUsersChange)</span>   
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xxl-3 col-md-6">
            <div class="card info-card">
                <div class="card-body">
                    <h5 class="card-title">Odsłony / Zdarzenia własne</h5>
                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center" style="color: #4154f1; background: #f6f6fe;">
                            <i class="bi bi-file-code"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@Model.Summary.TotalPageViews.ToString("N0") / @Model.Summary.TotalCustomEvents.ToString("N0")</h6>
                            @if (Model.Summary.TotalPageViewChange.HasValue)
                            {
                                <span class="@Model.GetChangeValueClass(Model.Summary.TotalPageViewChange) small pt-1 fw-bold">@Model.Summary.TotalPageViewChange%</span> <span class="text-muted small pt-2 ps-1">@Model.GetChangeValueText(Model.Summary.TotalPageViewChange)</span>   
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xxl-3 col-md-6">
            <div class="card info-card">
                <div class="card-body">
                    <h5 class="card-title">Średnia długość wizyty</h5>
                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center" style="background: #fbedc2; color: #ffc107;">
                            <i class="bi bi-clock"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@Model.Summary.AverageVisitLength.ToString("g")</h6>
                            @if (Model.Summary.AverageVisitLengthChange.HasValue)
                            {
                                <span class="@Model.GetChangeValueClass(Model.Summary.AverageVisitLengthChange) small pt-1 fw-bold">@Model.Summary.AverageVisitLengthChange%</span> <span class="text-muted small pt-2 ps-1">@Model.GetChangeValueText(Model.Summary.AverageVisitLengthChange)</span>   
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Użytkownicy w czasie</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/LineChart.cshtml", Model.UsersInTime)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Odsłony w czasie</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/LineChart.cshtml", Model.PageViewsInTime)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Średnia długość wizyty w czasie</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/TimeSpanLineChart.cshtml", Model.AverageVisitLengthInTime)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Źródła ruchu</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.TrafficSources)
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze kampanie</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.Campaigns)
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze zdarzenia</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.EventNames)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze strony</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.PageViews)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze strony wejściowe</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.EntryPages)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Strony z największym zaangażowaniem</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.PagesWithMostEngagement)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze państwa</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.Countries)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze miasta</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.Cities)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Najpopularniejsze języki</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/Table.cshtml", Model.Languages)
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Wielkość ekranu</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/PieChart.cshtml", Model.ScreenSizes)
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Ekran dotykowy</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/PieChart.cshtml", Model.TouchScreens)
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Przeglądarka</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/PieChart.cshtml", Model.Browsers)
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">System operacyjny</h5>
                    @await Html.PartialAsync("/Views/Shared/Components/PieChart.cshtml", Model.OSs)
                </div>
            </div>
        </div>
    </div>

</section>


